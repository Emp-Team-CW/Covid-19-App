package gui;

import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.time.Day;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.json.simple.JSONObject;

/**
 * GUI to be used by the COVID-19 app to display its output
 * 
 * @author Chris
 */
public class PassportGUI extends javax.swing.JFrame {
	
	private ActionListener controller;
        
        private TableRowSorter<TableModel> rowSorter;

    /**
     * Creates new form PassportGUI
     * 
     * @param actionListener an action listener to handle interaction with the GUI
     */
    public PassportGUI(ActionListener actionListener) {
    	/* Set the Nimbus look and feel
         * If Nimbus (introduced in Java SE 6) is not available,
         * stay with the default look and feel.
         */    	
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PassportGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        this.controller = actionListener; // link the action listener
        initComponents();
        /*
         * Create an object to sort the hotspot rows based on current cases
         * and then alphabetically based on location name.
         *
         * This code was adapted from code found at the following resource:
         * 
         * Oracle, 2022. How to Use Tables [online].
         * Available at: https://docs.oracle.com/javase/tutorial/uiswing/components/table.html#sorting
         * [Accessed 26/04/22].
         *
         * The code was not copied verbatim, it has been adapted to suit the
         * needs of this project
         */
        rowSorter = new TableRowSorter<TableModel>(hotspotTable.getModel());
        List<RowSorter.SortKey> sortKeys = new ArrayList<RowSorter.SortKey>();
        sortKeys.add(new RowSorter.SortKey(1, SortOrder.DESCENDING));
        sortKeys.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
        rowSorter.setSortKeys(sortKeys);
        hotspotTable.setRowSorter(rowSorter);
        
        // hide warnings before they are needed
        hideInvalidLoginLabel();
        hideInvalidPasswordLabel();
        
        // label the frame and center it in the screen
        setTitle("Covid-19 Data");
        setLocationRelativeTo(null);
    }

    /**
     * Adds a new row to the Hotspot table
     * 
     * @param place name of the hotspot
     * @param curCases the current cases in the hotspot location
     * @param totalCases the total cases since the start of the pandemic in this hotspot
     * @param totalDeaths the total deaths since the start of the pandemic in this hotspot
     * @param totalRecovered the total recoveries since the start of the pandemic in this hotspot
     */
    public void addHotspotRow(String place, long curCases, long totalCases, long totalDeaths, long totalRecovered){

        // create a row
        Object[] row = {place,curCases,totalCases,totalDeaths,totalRecovered};

        ((DefaultTableModel)hotspotTable.getModel()).addRow(row);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        loginDialog = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        titleLabel1 = new javax.swing.JLabel();
        optionButtons = new javax.swing.JPanel();
        loginBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        accountLabel = new javax.swing.JLabel();
        loginField = new javax.swing.JTextField();
        passwdLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JTextField();
        invalidLoginLabel = new javax.swing.JLabel();
        invalidPasswordLabel = new javax.swing.JLabel();
        TabbedPane = new javax.swing.JTabbedPane();
        nationalStatsPanel = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        recoveredPanel = new javax.swing.JPanel();
        infectedPanel = new javax.swing.JPanel();
        deathPanel = new javax.swing.JPanel();
        InfectionLabel = new javax.swing.JLabel();
        DeathLabel = new javax.swing.JLabel();
        RecoveredLabel = new javax.swing.JLabel();
        totalRecoveredOutput = new javax.swing.JLabel();
        totalInfectedOutput = new javax.swing.JLabel();
        totalDeathsOutput = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        statsTitleLabel = new javax.swing.JLabel();
        dateLabel1 = new javax.swing.JLabel();
        vaccinePanel = new javax.swing.JPanel();
        vaccineTitleLabel = new javax.swing.JLabel();
        LoginButton = new javax.swing.JButton();
        vaccineDisplayPanel = new javax.swing.JPanel();
        vaccinatedLabel = new javax.swing.JLabel();
        vaccinatedOutput = new javax.swing.JLabel();
        vaccineDateLabel = new javax.swing.JLabel();
        vaccineDateOutput = new javax.swing.JLabel();
        dosesLabel = new javax.swing.JLabel();
        dosesOutput = new javax.swing.JLabel();
        hotspotPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        hotspotTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        dateLabel2 = new javax.swing.JLabel();

        loginDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        loginDialog.setTitle("Login");
        loginDialog.setBackground(new java.awt.Color(64, 64, 64));
        loginDialog.setBounds(new java.awt.Rectangle(0, 25, 350, 225));
        setLocationRelativeTo(null);
        loginDialog.setModal(true);
        loginDialog.setResizable(false);

        jPanel5.setBackground(new java.awt.Color(64, 64, 64));
        jPanel5.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jPanel5.setLayout(new java.awt.GridLayout(2, 0));

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(212, 212, 212));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Login to view");
        titleLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel5.add(titleLabel);

        titleLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        titleLabel1.setForeground(new java.awt.Color(212, 212, 212));
        titleLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel1.setText("Vacination Information");
        titleLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel5.add(titleLabel1);

        loginDialog.getContentPane().add(jPanel5, java.awt.BorderLayout.NORTH);

        optionButtons.setBackground(new java.awt.Color(64, 64, 64));

        loginBtn.setBackground(new java.awt.Color(0, 102, 204));
        loginBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        loginBtn.setForeground(new java.awt.Color(255, 255, 255));
        loginBtn.setText("Login");
        loginBtn.addActionListener(controller);
        optionButtons.add(loginBtn);

        cancelBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        optionButtons.add(cancelBtn);

        loginDialog.getContentPane().add(optionButtons, java.awt.BorderLayout.SOUTH);

        jPanel4.setBackground(new java.awt.Color(64, 64, 64));
        jPanel4.setForeground(new java.awt.Color(64, 64, 64));
        java.awt.GridBagLayout jPanel4Layout = new java.awt.GridBagLayout();
        jPanel4Layout.columnWidths = new int[] {100, 200};
        jPanel4.setLayout(jPanel4Layout);

        accountLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        accountLabel.setForeground(new java.awt.Color(212, 212, 212));
        accountLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        accountLabel.setText("NHS Number:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel4.add(accountLabel, gridBagConstraints);

        loginField.setBackground(new java.awt.Color(69, 73, 75));
        loginField.setForeground(new java.awt.Color(212, 212, 212));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel4.add(loginField, gridBagConstraints);

        passwdLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        passwdLabel.setForeground(new java.awt.Color(212, 212, 212));
        passwdLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        passwdLabel.setText("Password:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel4.add(passwdLabel, gridBagConstraints);

        passwordField.setBackground(new java.awt.Color(69, 73, 75));
        passwordField.setForeground(new java.awt.Color(212, 212, 212));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel4.add(passwordField, gridBagConstraints);

        invalidLoginLabel.setForeground(new java.awt.Color(255, 51, 0));
        invalidLoginLabel.setText("* invalid NHS number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
        jPanel4.add(invalidLoginLabel, gridBagConstraints);

        invalidPasswordLabel.setForeground(new java.awt.Color(255, 51, 0));
        invalidPasswordLabel.setText("* password invalid");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
        jPanel4.add(invalidPasswordLabel, gridBagConstraints);

        loginDialog.getContentPane().add(jPanel4, java.awt.BorderLayout.CENTER);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(64, 64, 64));
        setPreferredSize(new java.awt.Dimension(1000, 700));
        setResizable(false);

        TabbedPane.setBackground(java.awt.Color.darkGray);
        TabbedPane.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        TabbedPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        nationalStatsPanel.setBackground(java.awt.Color.darkGray);
        nationalStatsPanel.setForeground(new java.awt.Color(187, 187, 190));
        nationalStatsPanel.setLayout(new java.awt.BorderLayout());

        jPanel6.setBackground(new java.awt.Color(64, 64, 64));
        java.awt.GridBagLayout jPanel6Layout = new java.awt.GridBagLayout();
        jPanel6Layout.rowHeights = new int[] {300, 1};
        jPanel6Layout.columnWeights = new double[] {2.0, 1.0, 2.0, 1.0, 2.0, 1.0};
        jPanel6.setLayout(jPanel6Layout);

        recoveredPanel.setBackground(new java.awt.Color(255, 204, 51));
        recoveredPanel.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 10, 20);
        jPanel6.add(recoveredPanel, gridBagConstraints);

        infectedPanel.setBackground(new java.awt.Color(255, 51, 51));
        infectedPanel.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 10, 20);
        jPanel6.add(infectedPanel, gridBagConstraints);

        deathPanel.setBackground(new java.awt.Color(153, 255, 0));
        deathPanel.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 10, 20);
        jPanel6.add(deathPanel, gridBagConstraints);

        InfectionLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 16)); // NOI18N
        InfectionLabel.setForeground(new java.awt.Color(212, 212, 212));
        InfectionLabel.setText("Total Infections:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 0, 5);
        jPanel6.add(InfectionLabel, gridBagConstraints);

        DeathLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 16)); // NOI18N
        DeathLabel.setForeground(new java.awt.Color(212, 212, 212));
        DeathLabel.setText("Total Deaths:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 0, 5);
        jPanel6.add(DeathLabel, gridBagConstraints);

        RecoveredLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 16)); // NOI18N
        RecoveredLabel.setForeground(new java.awt.Color(212, 212, 212));
        RecoveredLabel.setText("Total Recovered:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 0, 5);
        jPanel6.add(RecoveredLabel, gridBagConstraints);

        totalRecoveredOutput.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        totalRecoveredOutput.setForeground(new java.awt.Color(212, 212, 212));
        totalRecoveredOutput.setText("---");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 30);
        jPanel6.add(totalRecoveredOutput, gridBagConstraints);
        totalRecoveredOutput.getAccessibleContext().setAccessibleName("TotalRecovered_Number");

        totalInfectedOutput.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        totalInfectedOutput.setForeground(new java.awt.Color(212, 212, 212));
        totalInfectedOutput.setText("---");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 30);
        jPanel6.add(totalInfectedOutput, gridBagConstraints);

        totalDeathsOutput.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        totalDeathsOutput.setForeground(new java.awt.Color(212, 212, 212));
        totalDeathsOutput.setText("---");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 30);
        jPanel6.add(totalDeathsOutput, gridBagConstraints);

        nationalStatsPanel.add(jPanel6, java.awt.BorderLayout.CENTER);

        jPanel1.setBackground(new java.awt.Color(64, 64, 64));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        statsTitleLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        statsTitleLabel.setForeground(new java.awt.Color(212, 212, 212));
        statsTitleLabel.setText("National Statistics -");
        statsTitleLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        statsTitleLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jPanel1.add(statsTitleLabel);

        dateLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        dateLabel1.setForeground(new java.awt.Color(212, 212, 212));
        dateLabel1.setText("jLabel2");
        jPanel1.add(dateLabel1);

        nationalStatsPanel.add(jPanel1, java.awt.BorderLayout.NORTH);

        TabbedPane.addTab("National Statistics", nationalStatsPanel);

        vaccinePanel.setBackground(java.awt.Color.darkGray);
        vaccinePanel.setLayout(new java.awt.BorderLayout());

        vaccineTitleLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        vaccineTitleLabel.setForeground(new java.awt.Color(212, 212, 212));
        vaccineTitleLabel.setText("Vaccination Status");
        vaccineTitleLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 20, 10));
        vaccinePanel.add(vaccineTitleLabel, java.awt.BorderLayout.NORTH);

        LoginButton.setBackground(new java.awt.Color(51, 153, 255));
        LoginButton.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        LoginButton.setForeground(new java.awt.Color(255, 255, 255));
        LoginButton.setText("Login");
        LoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginButtonActionPerformed(evt);
            }
        });
        vaccinePanel.add(LoginButton, java.awt.BorderLayout.SOUTH);

        vaccineDisplayPanel.setBackground(new java.awt.Color(64, 64, 64));
        vaccineDisplayPanel.setLayout(new java.awt.GridLayout(3, 2, 10, -100));

        vaccinatedLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 16)); // NOI18N
        vaccinatedLabel.setForeground(new java.awt.Color(212, 212, 212));
        vaccinatedLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        vaccinatedLabel.setText("Vaccinated:");
        vaccineDisplayPanel.add(vaccinatedLabel);

        vaccinatedOutput.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        vaccinatedOutput.setForeground(new java.awt.Color(212, 212, 212));
        vaccinatedOutput.setText("---");
        vaccineDisplayPanel.add(vaccinatedOutput);

        vaccineDateLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 16)); // NOI18N
        vaccineDateLabel.setForeground(new java.awt.Color(212, 212, 212));
        vaccineDateLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        vaccineDateLabel.setText("Date of most recent vaccination:");
        vaccineDisplayPanel.add(vaccineDateLabel);

        vaccineDateOutput.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        vaccineDateOutput.setForeground(new java.awt.Color(212, 212, 212));
        vaccineDateOutput.setText("---");
        vaccineDisplayPanel.add(vaccineDateOutput);

        dosesLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 16)); // NOI18N
        dosesLabel.setForeground(new java.awt.Color(212, 212, 212));
        dosesLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        dosesLabel.setText("Doses taken:");
        vaccineDisplayPanel.add(dosesLabel);

        dosesOutput.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        dosesOutput.setForeground(new java.awt.Color(212, 212, 212));
        dosesOutput.setText("---");
        vaccineDisplayPanel.add(dosesOutput);

        vaccinePanel.add(vaccineDisplayPanel, java.awt.BorderLayout.CENTER);

        TabbedPane.addTab("Vaccination Status", null, vaccinePanel, "");

        hotspotPanel.setBackground(new java.awt.Color(64, 64, 64));
        hotspotPanel.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setBackground(new java.awt.Color(64, 64, 64));
        jScrollPane2.setForeground(new java.awt.Color(64, 64, 64));

        hotspotTable.setAutoCreateRowSorter(true);
        hotspotTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        hotspotTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Place", "Current Cases", "Total Cases", "Total Deaths", "Total Recovered"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class, java.lang.Long.class, java.lang.Long.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        hotspotTable.setGridColor(new java.awt.Color(64, 64, 64));
        hotspotTable.setRowHeight(30);
        hotspotTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(hotspotTable);

        hotspotPanel.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel2.setBackground(new java.awt.Color(64, 64, 64));
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(212, 212, 212));
        jLabel1.setText("Hotspot Information -");
        jLabel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 20, 10));
        jPanel2.add(jLabel1);

        dateLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        dateLabel2.setForeground(new java.awt.Color(212, 212, 212));
        dateLabel2.setText("jLabel3");
        jPanel2.add(dateLabel2);

        hotspotPanel.add(jPanel2, java.awt.BorderLayout.NORTH);

        TabbedPane.addTab("Hotspot Information", hotspotPanel);

        getContentPane().add(TabbedPane, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Called when the login button is pressed on the vaccine info panel
     * @param evt 
     */
    private void LoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginButtonActionPerformed
        // show the login dialog in the centre of the screen
        loginDialog.setLocationRelativeTo(null);
        loginDialog.setVisible(true);
    }//GEN-LAST:event_LoginButtonActionPerformed

    /**
     * Called when the user cancel a login
     * @param evt 
     */
    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // close the login dialog
        loginDialog.dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed
    
    /**
     * Updates the figures on the national statistics panel
     * @param totalInfected the total infections in the nation
     * @param totalDeaths the total deaths in the nation
     */
    public void setNationalStatisticsLabels(long totalInfected, long totalDeaths) {
        // update each label to the correct value
    	totalInfectedOutput.setText(String.valueOf(totalInfected));
    	totalDeathsOutput.setText(String.valueOf(totalDeaths));
    	totalRecoveredOutput.setText(String.valueOf(totalInfected - totalDeaths));
    }
    
    /**
     * @return the NHS number entered by the user
     */
    public String getEnteredLoginNumber() {
        return loginField.getText();
    }
    
    /**
     * @return the NHS password entered by the user
     */
    public String getEnteredLoginPassword() {
        return passwordField.getText();
    }
    
    /**
     * Hides the invalid login detail warning
     */
    public void hideInvalidLoginLabel() {
        invalidLoginLabel.setVisible(false);
    }
    
    /**
     * Hides the invalid password warning
     */
    public void hideInvalidPasswordLabel() {
        invalidPasswordLabel.setVisible(false);
    }
    
    /**
     * Shows the invalid login detail warning
     */
    public void displayInvalidLoginLabel() {
        invalidLoginLabel.setVisible(true);
    }
    
    /**
     * Shows the invalid password warning
     */
    public void displayInvalidPasswordLabel() {
        invalidPasswordLabel.setVisible(true);
    }
    
    /**
     * Closes the login dialog
     */
    public void closeLoginDialog() {
        loginDialog.dispose();
    }
    
    /**
     * Updates the vaccine status label
     * @param vaccinated true if the user is vaccinated, false otherwise
     */
    public void showVaccinated(boolean vaccinated) {
        if(vaccinated) {
            vaccinatedOutput.setText("Yes");
        } else {
            vaccinatedOutput.setText("No");
        }
    }
    
    /**
     * Updates the most recent vaccination date label
     * @param date a String of the date of the most recent vaccination
     */
    public void showVaccineDate(String date) {
        vaccineDateOutput.setText(date);
    }
    
    /**
     * Updates the vaccine doses taken label
     * @param doses the number of doses taken by the user
     */
    public void showDoses(int doses) {
        dosesOutput.setText(String.valueOf(doses));
    }
    
    /**
     * Updates and displays the national statistics graphs
     * @param covidData all retrieved COVID-19 data for the nation
     */
    public void updateGraphs(JSONObject[] covidData) {
        // create a timeseries for each graph
        TimeSeries recoveredData = new TimeSeries("Recovered");
        TimeSeries infectedData = new TimeSeries("Infected");
        TimeSeries deathData = new TimeSeries("Deaths");
        
        long cumCases, cumDeaths, infections, deaths; // used in the loop below

        // loop each record from the API
        for(int i = covidData.length - 1; i >= 0; i--) {
            // create a Day of the records date
            Day day = new Day(Integer.parseInt(((String)((JSONObject)covidData[i]).get("date")).substring(((String)((JSONObject)covidData[i]).get("date")).indexOf('-', ((String)((JSONObject)covidData[i]).get("date")).indexOf('-') + 1) + 1)),
                    Integer.parseInt(((String)((JSONObject)covidData[i]).get("date")).substring(((String)((JSONObject)covidData[i]).get("date")).indexOf('-') + 1, ((String)((JSONObject)covidData[i]).get("date")).indexOf('-', ((String)((JSONObject)covidData[i]).get("date")).indexOf('-') + 1))),
                    Integer.parseInt(((String)((JSONObject)covidData[i]).get("date")).substring(0, ((String)((JSONObject)covidData[i]).get("date")).indexOf('-')))
            );
            
            // hold the relevant data; if non -> set to 0
            cumCases = covidData[i].get("cumCases") != null ? (long) covidData[i].get("cumCases") : 0;
            cumDeaths = covidData[i].get("cumDeaths") != null ? (long) covidData[i].get("cumDeaths") : 0;
            infections = covidData[i].get("dailyCases") != null ? (long) covidData[i].get("dailyCases") : 0;
            deaths = covidData[i].get("dailyDeaths") != null ? (long) covidData[i].get("dailyDeaths") : 0;
            
            // add data to the timeseries
            recoveredData.add(day, cumCases - cumDeaths);
            infectedData.add(day, infections);
            deathData.add(day, deaths);
            
        }
        
        // create a collection for each graph
        TimeSeriesCollection recoveredDataset = new TimeSeriesCollection(recoveredData);
        TimeSeriesCollection infectedDataset = new TimeSeriesCollection(infectedData);
        TimeSeriesCollection deathDataset = new TimeSeriesCollection(deathData);        
        
        // create the graphs
        JFreeChart recoveredChart = ChartFactory.createTimeSeriesChart("Total Recovered Over Time", "", "", recoveredDataset);
        JFreeChart infectedChart = ChartFactory.createTimeSeriesChart("Current Infections", "", "", infectedDataset);
        JFreeChart deathChart = ChartFactory.createTimeSeriesChart("Daily Deaths", "", "", deathDataset);
        
        // hide the legend, as there is only one plot per graph
        recoveredChart.removeLegend();
        infectedChart.removeLegend();
        deathChart.removeLegend();
        
        // create a panel for each graph
        ChartPanel recoveredChartPanel = new ChartPanel(recoveredChart);
        ChartPanel infectedChartPanel = new ChartPanel(infectedChart);
        ChartPanel deathChartPanel = new ChartPanel(deathChart);

        // add the graph panels to the GUI
        // clear
        recoveredPanel.removeAll();
        infectedPanel.removeAll();
        deathPanel.removeAll();
        // add new
        recoveredPanel.add(recoveredChartPanel);
        infectedPanel.add(infectedChartPanel);
        deathPanel.add(deathChartPanel);
        
    }
    
    /**
     * Displays the date the data was last updated in the API
     * @param date a string of the date the API was last updated
     */
    public void setCurrentDate(String date) {
        dateLabel1.setText(date);
        dateLabel2.setText(date);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DeathLabel;
    private javax.swing.JLabel InfectionLabel;
    private javax.swing.JButton LoginButton;
    private javax.swing.JLabel RecoveredLabel;
    private javax.swing.JTabbedPane TabbedPane;
    private javax.swing.JLabel accountLabel;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JLabel dateLabel1;
    private javax.swing.JLabel dateLabel2;
    private javax.swing.JPanel deathPanel;
    private javax.swing.JLabel dosesLabel;
    private javax.swing.JLabel dosesOutput;
    private javax.swing.JPanel hotspotPanel;
    private javax.swing.JTable hotspotTable;
    private javax.swing.JPanel infectedPanel;
    private javax.swing.JLabel invalidLoginLabel;
    private javax.swing.JLabel invalidPasswordLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton loginBtn;
    private javax.swing.JDialog loginDialog;
    private javax.swing.JTextField loginField;
    private javax.swing.JPanel nationalStatsPanel;
    private javax.swing.JPanel optionButtons;
    private javax.swing.JLabel passwdLabel;
    private javax.swing.JTextField passwordField;
    private javax.swing.JPanel recoveredPanel;
    private javax.swing.JLabel statsTitleLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel titleLabel1;
    private javax.swing.JLabel totalDeathsOutput;
    private javax.swing.JLabel totalInfectedOutput;
    private javax.swing.JLabel totalRecoveredOutput;
    private javax.swing.JLabel vaccinatedLabel;
    private javax.swing.JLabel vaccinatedOutput;
    private javax.swing.JLabel vaccineDateLabel;
    private javax.swing.JLabel vaccineDateOutput;
    private javax.swing.JPanel vaccineDisplayPanel;
    private javax.swing.JPanel vaccinePanel;
    private javax.swing.JLabel vaccineTitleLabel;
    // End of variables declaration//GEN-END:variables
}
